name: Docker Image CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      HOME_SERVER_IP: ${{ secrets.HOME_SERVER_IP }}
      HOME_SERVER_USER: ${{ secrets.HOME_SERVER_USER }}

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up SSH for server access
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.HOME_SERVER_SSH_KEY }}

      # Build the Docker images
      - name: Build Backend Docker Image
        run: |
          docker build -t backend-image ./Server

      - name: Build Frontend Docker Image
        run: |
          docker build -t frontend-image ./client

      # Save Docker images as tar files for transfer
      - name: Save Backend Image
        run: |
          docker save backend-image | gzip > backend-image.tar.gz

      - name: Save Frontend Image
        run: |
          docker save frontend-image | gzip > frontend-image.tar.gz

      # Transfer Docker images to the server
      - name: Transfer Backend Image
        run: |
          scp backend-image.tar.gz ${{ env.HOME_SERVER_USER }}@${{ env.HOME_SERVER_IP }}:~/backend-image.tar.gz

      - name: Transfer Frontend Image
        run: |
          scp frontend-image.tar.gz ${{ env.HOME_SERVER_USER }}@${{ env.HOME_SERVER_IP }}:~/frontend-image.tar.gz

      # Deploy on the server
      - name: Deploy to Server
        run: |
          ssh ${{ env.HOME_SERVER_USER }}@${{ env.HOME_SERVER_IP }} << EOF
          # Load Docker images on the server
          docker load < ~/backend-image.tar.gz
          docker load < ~/frontend-image.tar.gz

          # Remove existing containers but keep volumes
          docker-compose down --remove-orphans

          # Start the updated application
          docker-compose up -d --build
          EOF
